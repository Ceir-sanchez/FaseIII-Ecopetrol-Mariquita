(function(){
	var loadHandler = window['i_{5A456D0D-928B-45D8-9330-4ADC586D002F}'];
	var interactionJson = "{"d":{"i":"interactivity_2k6nb38xjnd","C":{"is":[{"i":"84y92acangoo","t":{"h":"<p style=\"text-align:center;line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:24px;font-family:fnt3_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:24px;font-family:fnt3_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Líneas de fluido a presión (Diesel, GLP, Gasolina) Agua bajo presión en tuberías</span></p>","a":"<p><b>Líneas de fluido a presión (Diesel, GLP, Gasolina) Agua bajo presión en tuberías</b></p>","r":[],"d":["Líneas de fluido a presión (Diesel, GLP, Gasolina) Agua bajo presión en tuberías"]},"c":{"h":"<span data-count=\"0\" data-unselectable=\"\" data-block-separator=\"\" style=\"float:left;width:0px;height:0px\">​</span><div style=\"padding-top:10px;padding-bottom:10px;padding-left:30px;float:right\"><span id=\"image1\"></span></div><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt1_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt1_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">RIESGOS:</span></p><ul><li style=\"line-height:1.275em;padding-top:0.4em;padding-bottom:0em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">*Pérdida de contención (Vapores)</span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">*Exposición a ​ ​ hidrocarburos </span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">*Incendio, </span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">*Explosiones, </span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">*Intoxicaciones, </span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">*Quemaduras ​ ​ </span></li></ul><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt1_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt1_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">CONTROLES:</span></p><ol><li style=\"text-align:justify;line-height:1.275em;padding-top:0.4em;padding-bottom:0em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">(PV) Realizar rondas estructuradas y reportar ​ ​ cualquier anormalidad. Realizar mediciones periodicas de vapores y gases. ​  ​  ​ ​ </span></li><li style=\"text-align:justify;line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">(PV) Evitar contacto con puntos ​ ​ calientes del equipo y si va a intervenir el equipo haga uso del tiempo ​ ​ apropiado de reposo para interbenirlo ​  ​  ​  ​ ​ </span></li><li style=\"text-align:justify;line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">(PV)Verificar uniones y bridas ​ ​ con cero fugas, Asegurar la no presencia de ruidos extraños. ​  ​  ​ ​ </span></li><li style=\"text-align:justify;line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">(PT) ​ Mantener distancias prudentes de los ​ sistemas presurizados. No manipular equipos ​ ​ o herramientas ​ que puedan generar ​ ​ chispas en áreas con presencia ​ de ​ ​ gases. ​  ​  ​ ​ </span></li><li style=\"text-align:justify;line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">(PT) Señalización y aislamiento ​ ​ de áreas de trabajo .Utilizar máscara con filtros para vapores orgánicos. ​ ​ Sensores detectores de gases en buen estado y Limpios. ​  ​  ​ ​ </span></li><li style=\"text-align:justify;line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">(RC) Informar cualquier fuga al ​ ​ personal de operaciones, Evacuar hacia los puntos de encuentro de la zona, ​ ​ evacuar en dirección contraria al viento. ​  ​  ​ ​ </span></li><li style=\"text-align:justify;line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">(RC) Activar PDE y PMA (Plan De Emergencia y ​ ​ Plan de Manejo Ambiental) ​   </span></li></ol>","a":"<span id=\"image1\"></span><p><b>RIESGOS:</b></p><ul><li>*Pérdida de contención (Vapores)</li><li>*Exposición a ​ ​ hidrocarburos </li><li>*Incendio, </li><li>*Explosiones, </li><li>*Intoxicaciones, </li><li>*Quemaduras ​ ​ </li></ul><p><b>CONTROLES:</b></p><ol><li>(PV) Realizar rondas estructuradas y reportar ​ ​ cualquier anormalidad. Realizar mediciones periodicas de vapores y gases. ​  ​  ​ ​ </li><li>(PV) Evitar contacto con puntos ​ ​ calientes del equipo y si va a intervenir el equipo haga uso del tiempo ​ ​ apropiado de reposo para interbenirlo ​  ​  ​  ​ ​ </li><li>(PV)Verificar uniones y bridas ​ ​ con cero fugas, Asegurar la no presencia de ruidos extraños. ​  ​  ​ ​ </li><li>(PT) ​ Mantener distancias prudentes de los ​ sistemas presurizados. No manipular equipos ​ ​ o herramientas ​ que puedan generar ​ ​ chispas en áreas con presencia ​ de ​ ​ gases. ​  ​  ​ ​ </li><li>(PT) Señalización y aislamiento ​ ​ de áreas de trabajo .Utilizar máscara con filtros para vapores orgánicos. ​ ​ Sensores detectores de gases en buen estado y Limpios. ​  ​  ​ ​ </li><li>(RC) Informar cualquier fuga al ​ ​ personal de operaciones, Evacuar hacia los puntos de encuentro de la zona, ​ ​ evacuar en dirección contraria al viento. ​  ​  ​ ​ </li><li>(RC) Activar PDE y PMA (Plan De Emergencia y ​ ​ Plan de Manejo Ambiental) ​   </li></ol>","r":[{"assetId":"storage://images/img-315ab13ff0fab6fa33d6f38c667b66085c02c3e2.gif","width":238,"height":213.04347826086956,"text":"","url":"","target":"","increaseByClick":false,"id":"image1","type":"image"}],"d":[{"id":"image1"},"RIESGOS:\n*Pérdida de contención (Vapores)\n*Exposición a   hidrocarburos \n*Incendio, \n*Explosiones, \n*Intoxicaciones, \n*Quemaduras   \nCONTROLES:\n(PV) Realizar rondas estructuradas y reportar   cualquier anormalidad. Realizar mediciones periodicas de vapores y gases.       \n(PV) Evitar contacto con puntos   calientes del equipo y si va a intervenir el equipo haga uso del tiempo   apropiado de reposo para interbenirlo         \n(PV)Verificar uniones y bridas   con cero fugas, Asegurar la no presencia de ruidos extraños.       \n(PT)  Mantener distancias prudentes de los  sistemas presurizados. No manipular equipos   o herramientas  que puedan generar   chispas en áreas con presencia  de   gases.       \n(PT) Señalización y aislamiento   de áreas de trabajo .Utilizar máscara con filtros para vapores orgánicos.   Sensores detectores de gases en buen estado y Limpios.       \n(RC) Informar cualquier fuga al   personal de operaciones, Evacuar hacia los puntos de encuentro de la zona,   evacuar en dirección contraria al viento.       \n(RC) Activar PDE y PMA (Plan De Emergencia y   Plan de Manejo Ambiental)    "]},"tp":"item"},{"i":"wrt4nf1x6faz","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:24px;font-family:fnt3_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:24px;font-family:fnt3_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Trabajos a altura menor de ​ 1.5 metros</span></p>","a":"<p><b>Trabajos a altura menor de ​ 1.5 metros</b></p>","r":[],"d":["Trabajos a altura menor de  1.5 metros"]},"c":{"h":"<span data-count=\"0\" data-unselectable=\"\" data-block-separator=\"\" style=\"float:left;width:0px;height:0px\">​</span><div style=\"padding-top:10px;padding-bottom:10px;padding-left:30px;float:right\"><span id=\"image2\"></span></div><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt1_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt1_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">RIESGOS:</span></p><ul><li style=\"line-height:1.275em;padding-top:0.4em;padding-bottom:0em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">*Caídas a nivel. </span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">*Objetos elevados a menos de 1,5 ​ ​ mts de altura. ​ </span></li></ul><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt1_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt1_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">CONTROLES:</span></p><ol><li style=\"text-align:justify;line-height:1.275em;padding-top:0.4em;padding-bottom:0em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">(PV) Verificar las condiciones de los elementos ​ ​ de protección personal. Y el uso adecuado de los EPP. ​  ​  ​ ​ </span></li><li style=\"text-align:justify;line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">(PV) Señalización de las ​ áreas ​ ​ ​ para ​ ​ acopios de materiales y ​ ​ herramientas. ​  ​  ​ ​ </span></li><li style=\"text-align:justify;line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">(PT) No correr en la zona de ​ ​ trabajo, utilizar los pasamanos ​ en los ​ ​ cambios de nivel y aplicar principio ​ ​ ​ de los ​ tres puntos de ​ apoyo. ​  ​  ​ </span></li><li style=\"text-align:justify;line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">(PT)Utilizar las herramientas ​ ​ adecuadas para la actividad. ​ Utilizar ​ ​ las herramientas adecuadas para la actividad. ​  ​  ​ </span></li><li style=\"text-align:justify;line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">(PT) Usar pasamanos, utilizar los ​ ​ tres puntos de apoyo, No tener distraccion al caminar. ​  ​  ​ ​ </span></li><li style=\"text-align:justify;line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">(PT) Respeto de senderos de zonas ​ ​ verdes y el mantenimiento de las mismas. Identificar rutas y vías de ​ ​ evacuación de la planta. ​  ​  ​ ​ </span></li><li style=\"text-align:justify;line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">(RC) ​ Activar medevac. hacer ​ verificación de atención ​ primaria en sitio de requerirse ​ hacer traslado ​ a ​ ​ ​ centro médico y ​ realizar ​ ​ reporte de accidente y disponer de suero antiofídico. ​   </span></li></ol>","a":"<span id=\"image2\"></span><p><b>RIESGOS:</b></p><ul><li>*Caídas a nivel. </li><li>*Objetos elevados a menos de 1,5 ​ ​ mts de altura. ​ </li></ul><p><b>CONTROLES:</b></p><ol><li>(PV) Verificar las condiciones de los elementos ​ ​ de protección personal. Y el uso adecuado de los EPP. ​  ​  ​ ​ </li><li>(PV) Señalización de las ​ áreas ​ ​ ​ para ​ ​ acopios de materiales y ​ ​ herramientas. ​  ​  ​ ​ </li><li>(PT) No correr en la zona de ​ ​ trabajo, utilizar los pasamanos ​ en los ​ ​ cambios de nivel y aplicar principio ​ ​ ​ de los ​ tres puntos de ​ apoyo. ​  ​  ​ </li><li>(PT)Utilizar las herramientas ​ ​ adecuadas para la actividad. ​ Utilizar ​ ​ las herramientas adecuadas para la actividad. ​  ​  ​ </li><li>(PT) Usar pasamanos, utilizar los ​ ​ tres puntos de apoyo, No tener distraccion al caminar. ​  ​  ​ ​ </li><li>(PT) Respeto de senderos de zonas ​ ​ verdes y el mantenimiento de las mismas. Identificar rutas y vías de ​ ​ evacuación de la planta. ​  ​  ​ ​ </li><li>(RC) ​ Activar medevac. hacer ​ verificación de atención ​ primaria en sitio de requerirse ​ hacer traslado ​ a ​ ​ ​ centro médico y ​ realizar ​ ​ reporte de accidente y disponer de suero antiofídico. ​   </li></ol>","r":[{"assetId":"storage://images/img-ea554cb8a08821fb2a29d76533d4d10137b849d9.gif","width":233,"height":232.328530259366,"text":"","url":"","target":"","increaseByClick":false,"id":"image2","type":"image"}],"d":[{"id":"image2"},"RIESGOS:\n*Caídas a nivel. \n*Objetos elevados a menos de 1,5   mts de altura.  \nCONTROLES:\n(PV) Verificar las condiciones de los elementos   de protección personal. Y el uso adecuado de los EPP.       \n(PV) Señalización de las  áreas    para   acopios de materiales y   herramientas.       \n(PT) No correr en la zona de   trabajo, utilizar los pasamanos  en los   cambios de nivel y aplicar principio    de los  tres puntos de  apoyo.      \n(PT)Utilizar las herramientas   adecuadas para la actividad.  Utilizar   las herramientas adecuadas para la actividad.      \n(PT) Usar pasamanos, utilizar los   tres puntos de apoyo, No tener distraccion al caminar.       \n(PT) Respeto de senderos de zonas   verdes y el mantenimiento de las mismas. Identificar rutas y vías de   evacuación de la planta.       \n(RC)  Activar medevac. hacer  verificación de atención  primaria en sitio de requerirse  hacer traslado  a    centro médico y  realizar   reporte de accidente y disponer de suero antiofídico.    "]},"tp":"item"},{"i":"8vq90biovry4","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:24px;font-family:fnt3_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:24px;font-family:fnt3_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Trabajos a altura mayor de 1.5 metros</span></p>","a":"<p><b>Trabajos a altura mayor de 1.5 metros</b></p>","r":[],"d":["Trabajos a altura mayor de 1.5 metros"]},"c":{"h":"<span data-count=\"0\" data-unselectable=\"\" data-block-separator=\"\" style=\"float:left;width:0px;height:0px\">​</span><div style=\"padding-top:10px;padding-bottom:10px;padding-left:30px;float:right\"><span id=\"image3\"></span></div><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt1_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt1_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">RIESGOS:</span></p><ul><li style=\"line-height:1.275em;padding-top:0.4em;padding-bottom:0em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">*Caída de altura ​ ​ ​ </span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">*Objetos elevados a mas de 1,5 mts de altura. ​ ​ </span></li></ul><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt1_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt1_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">CONTROLES:</span></p><ol><li style=\"text-align:justify;line-height:1.275em;padding-top:0.4em;padding-bottom:0em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">(PV) ​ ​ ​ Inspeccionar los equipos (andamios, arnés de seguridad, eslingas entre ​ ​ otros).  ​  ​  ​ ​ </span></li><li style=\"text-align:justify;line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">(PV) Señalización del área de ​ ​ trabajo. Plan de izaje de cargas ​  ​  ​ ​ </span></li><li style=\"text-align:justify;line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">(PV) Contar con personal ​ ​ competente y apto para el desarrollo de estas actividades ​  ​  ​ ​ </span></li><li style=\"text-align:justify;line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">(PT) Uso de EPP, Uso correcto del ​ ​ equipo de proteccion contra caidas.(Linea de vida,arnés, eslinga, casco con ​ ​ barbuquejo y ​ uso de 3 ​ puntos de apoyo). ​  ​  ​ ​ </span></li><li style=\"text-align:justify;line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">(PT) Tener un plan de rescate. ​ ​ Disponer ​ botiquín de primeros auxilios ​ ​ y camilla rígida. ​  ​  ​ ​ </span></li><li style=\"text-align:justify;line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">(RC)Activacion del MEDEVAC, ​ ​ Disponer de vehículo en la planta para la movilización de lesionados, ​   </span></li></ol>","a":"<span id=\"image3\"></span><p><b>RIESGOS:</b></p><ul><li>*Caída de altura ​ ​ ​ </li><li>*Objetos elevados a mas de 1,5 mts de altura. ​ ​ </li></ul><p><b>CONTROLES:</b></p><ol><li>(PV) ​ ​ ​ Inspeccionar los equipos (andamios, arnés de seguridad, eslingas entre ​ ​ otros).  ​  ​  ​ ​ </li><li>(PV) Señalización del área de ​ ​ trabajo. Plan de izaje de cargas ​  ​  ​ ​ </li><li>(PV) Contar con personal ​ ​ competente y apto para el desarrollo de estas actividades ​  ​  ​ ​ </li><li>(PT) Uso de EPP, Uso correcto del ​ ​ equipo de proteccion contra caidas.(Linea de vida,arnés, eslinga, casco con ​ ​ barbuquejo y ​ uso de 3 ​ puntos de apoyo). ​  ​  ​ ​ </li><li>(PT) Tener un plan de rescate. ​ ​ Disponer ​ botiquín de primeros auxilios ​ ​ y camilla rígida. ​  ​  ​ ​ </li><li>(RC)Activacion del MEDEVAC, ​ ​ Disponer de vehículo en la planta para la movilización de lesionados, ​   </li></ol>","r":[{"assetId":"storage://images/img-825e0fc760f003b342e200099d503dfce0a10a04.gif","width":269.0582959641256,"height":413,"text":"","url":"","target":"","increaseByClick":false,"id":"image3","type":"image"}],"d":[{"id":"image3"},"RIESGOS:\n*Caída de altura    \n*Objetos elevados a mas de 1,5 mts de altura.   \nCONTROLES:\n(PV)    Inspeccionar los equipos (andamios, arnés de seguridad, eslingas entre   otros).        \n(PV) Señalización del área de   trabajo. Plan de izaje de cargas       \n(PV) Contar con personal   competente y apto para el desarrollo de estas actividades       \n(PT) Uso de EPP, Uso correcto del   equipo de proteccion contra caidas.(Linea de vida,arnés, eslinga, casco con   barbuquejo y  uso de 3  puntos de apoyo).       \n(PT) Tener un plan de rescate.   Disponer  botiquín de primeros auxilios   y camilla rígida.       \n(RC)Activacion del MEDEVAC,   Disponer de vehículo en la planta para la movilización de lesionados,    "]},"tp":"item"},{"i":"ajopra9oebyd","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:24px;font-family:fnt3_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:24px;font-family:fnt3_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Partes ​ con Movimiento o Rotativas</span></p>","a":"<p><b>Partes ​ con Movimiento o Rotativas</b></p>","r":[],"d":["Partes  con Movimiento o Rotativas"]},"c":{"h":"<span data-count=\"0\" data-unselectable=\"\" data-block-separator=\"\" style=\"float:left;width:0px;height:0px\">​</span><div style=\"padding-top:10px;padding-bottom:10px;padding-left:30px;float:right\"><span id=\"image4\"></span></div><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt1_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt1_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">RIESGOS:</span></p><ul><li style=\"line-height:1.275em;padding-top:0.4em;padding-bottom:0em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">*Machucones, </span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">*Golpes </span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">*Lesiones.</span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">*Cortaduras</span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">*Contacto</span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">*Atrapamiento. ​ ​ </span></li></ul><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt1_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt1_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">CONTROLES:</span></p><ol><li style=\"text-align:justify;line-height:1.275em;padding-top:0.4em;padding-bottom:0em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">(PV) Inspeccionar el estado de las guardas de ​ ​ seguridad del equipo ​  ​  ​ ​ </span></li><li style=\"text-align:justify;line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">(PV) Realizar inspección ​ ​ preoperacional de las herramientas ​  ​  ​ ​ </span></li><li style=\"text-align:justify;line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">(PT) Aislar el área según sea ​ ​ requerido. Utilizar las herramientas adecuadas en cada una de las ​ ​ tareas. ​ Uso de guardas de seguridad ​ ​ para equipo rotativo. ​  ​  ​ ​ </span></li><li style=\"text-align:justify;line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">(PT) Uso de ropa de trabajo ​ ​ ajustada y por dentro del pantalón y camisa enabotnodada en los puños. ​  ​  ​ ​ </span></li><li style=\"text-align:justify;line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">(PT) Verificar el no uso de ​ ​ elementos colgantes como anillos,cadenas o manillas que puedan ser atrapadas ​ ​ por el equipo ​  ​  ​ ​ </span></li><li style=\"text-align:justify;line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">(RC) Activar el PDC, ​ Suspender ​ ​ ​ los trabajos y salir hacia punto de encuentro en caso de ser ​ ​ necesario. ​   </span></li></ol>","a":"<span id=\"image4\"></span><p><b>RIESGOS:</b></p><ul><li>*Machucones, </li><li>*Golpes </li><li>*Lesiones.</li><li>*Cortaduras</li><li>*Contacto</li><li>*Atrapamiento. ​ ​ </li></ul><p><b>CONTROLES:</b></p><ol><li>(PV) Inspeccionar el estado de las guardas de ​ ​ seguridad del equipo ​  ​  ​ ​ </li><li>(PV) Realizar inspección ​ ​ preoperacional de las herramientas ​  ​  ​ ​ </li><li>(PT) Aislar el área según sea ​ ​ requerido. Utilizar las herramientas adecuadas en cada una de las ​ ​ tareas. ​ Uso de guardas de seguridad ​ ​ para equipo rotativo. ​  ​  ​ ​ </li><li>(PT) Uso de ropa de trabajo ​ ​ ajustada y por dentro del pantalón y camisa enabotnodada en los puños. ​  ​  ​ ​ </li><li>(PT) Verificar el no uso de ​ ​ elementos colgantes como anillos,cadenas o manillas que puedan ser atrapadas ​ ​ por el equipo ​  ​  ​ ​ </li><li>(RC) Activar el PDC, ​ Suspender ​ ​ ​ los trabajos y salir hacia punto de encuentro en caso de ser ​ ​ necesario. ​   </li></ol>","r":[{"assetId":"storage://images/img-9c4a5eb145590627fe8a9c4fee3d34e5924720bf.gif","width":320.77922077922074,"height":206.69456066945605,"text":"","url":"","target":"","increaseByClick":false,"id":"image4","type":"image"}],"d":[{"id":"image4"},"RIESGOS:\n*Machucones, \n*Golpes \n*Lesiones.\n*Cortaduras\n*Contacto\n*Atrapamiento.   \nCONTROLES:\n(PV) Inspeccionar el estado de las guardas de   seguridad del equipo       \n(PV) Realizar inspección   preoperacional de las herramientas       \n(PT) Aislar el área según sea   requerido. Utilizar las herramientas adecuadas en cada una de las   tareas.  Uso de guardas de seguridad   para equipo rotativo.       \n(PT) Uso de ropa de trabajo   ajustada y por dentro del pantalón y camisa enabotnodada en los puños.       \n(PT) Verificar el no uso de   elementos colgantes como anillos,cadenas o manillas que puedan ser atrapadas   por el equipo       \n(RC) Activar el PDC,  Suspender    los trabajos y salir hacia punto de encuentro en caso de ser   necesario.    "]},"tp":"item"},{"i":"rvc73ncklka8","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:24px;font-family:fnt3_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:24px;font-family:fnt3_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Equipos Energizados</span></p>","a":"<p><b>Equipos Energizados</b></p>","r":[],"d":["Equipos Energizados"]},"c":{"h":"<span data-count=\"0\" data-unselectable=\"\" data-block-separator=\"\" style=\"float:left;width:0px;height:0px\">​</span><div style=\"padding-top:10px;padding-bottom:10px;padding-left:30px;float:right\"><span id=\"image5\"></span></div><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt1_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt1_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">RIESGOS: </span></p><ul><li style=\"text-align:justify;line-height:1.275em;padding-top:0.4em;padding-bottom:0em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">*Contacto Directo e Indirecto</span></li><li style=\"text-align:justify;line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">*Corriente Electrica ​ ​ (Fibrilacion ​ quemaduras 1, 2 grado) ​ </span></li><li style=\"text-align:justify;line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">*Cortocircuito </span></li><li style=\"text-align:justify;line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">* Descargas Atmosfericas ​ ​ ​ </span></li><li style=\"text-align:justify;line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">*Tormentas electricas </span></li><li style=\"text-align:justify;line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">* Energía electroestática ​ ​ </span></li></ul><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt1_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt1_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">CONTROLES:</span></p><ol><li style=\"text-align:justify;line-height:1.275em;padding-top:0.4em;padding-bottom:0em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">(PV)Señalización y/o aplicación de distancias ​ ​ mínimas de seguridad y límites de aproximación seguros. ​  ​  ​ ​ </span></li><li style=\"text-align:justify;line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">(PV) Monitoreo periódico de las ​ ​ condiciones ambientales ​  ​  ​ ​ </span></li><li style=\"text-align:justify;line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">(PV) Verificar ​ sistemas de puesta a tierra ​ y apantallamiento adecuados, garantizar la ​ ​ equipotencialización de la infraestructura. ​  ​  ​ ​ </span></li><li style=\"text-align:justify;line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">(PT) Aplicar SAES respectivo al ​ ​ equipo a intervenir, utilizar equipos de protección personal dieléctrico. ​  ​  ​ ​ </span></li><li style=\"text-align:justify;line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">(PT) Confirmar la pérdida de ​ ​ disponibilidad del equipo ​  ​  ​ </span></li><li style=\"text-align:justify;line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">(RC) Aislar , Bloquear y ​ ​ Tarjetear elementos intervenidos u afectados para evitar nuevas afectaciones ​ ​ hasta la normalización de la instalación eléctrica. ​  ​  ​ ​ </span></li><li style=\"text-align:justify;line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">(RC) Suspender el trabajo que sea ​ ​ afectado por la lluvia, tormentas eléctricas o fuertes vientos. ​  ​  ​ ​ </span></li><li style=\"text-align:justify;line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">(RC) Activar paradas de ​ ​ emergencias de los equipos asociadas a la falla ​  ​  ​ ​ </span></li><li style=\"text-align:justify;line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">(RC) Evacuar hacia los puntos de ​ ​ encuentro de la zona, evacuar en dirección contraria al viento. ​   </span></li></ol>","a":"<span id=\"image5\"></span><p><b>RIESGOS: </b></p><ul><li>*Contacto Directo e Indirecto</li><li>*Corriente Electrica ​ ​ (Fibrilacion ​ quemaduras 1, 2 grado) ​ </li><li>*Cortocircuito </li><li>* Descargas Atmosfericas ​ ​ ​ </li><li>*Tormentas electricas </li><li>* Energía electroestática ​ ​ </li></ul><p><b>CONTROLES:</b></p><ol><li>(PV)Señalización y/o aplicación de distancias ​ ​ mínimas de seguridad y límites de aproximación seguros. ​  ​  ​ ​ </li><li>(PV) Monitoreo periódico de las ​ ​ condiciones ambientales ​  ​  ​ ​ </li><li>(PV) Verificar ​ sistemas de puesta a tierra ​ y apantallamiento adecuados, garantizar la ​ ​ equipotencialización de la infraestructura. ​  ​  ​ ​ </li><li>(PT) Aplicar SAES respectivo al ​ ​ equipo a intervenir, utilizar equipos de protección personal dieléctrico. ​  ​  ​ ​ </li><li>(PT) Confirmar la pérdida de ​ ​ disponibilidad del equipo ​  ​  ​ </li><li>(RC) Aislar , Bloquear y ​ ​ Tarjetear elementos intervenidos u afectados para evitar nuevas afectaciones ​ ​ hasta la normalización de la instalación eléctrica. ​  ​  ​ ​ </li><li>(RC) Suspender el trabajo que sea ​ ​ afectado por la lluvia, tormentas eléctricas o fuertes vientos. ​  ​  ​ ​ </li><li>(RC) Activar paradas de ​ ​ emergencias de los equipos asociadas a la falla ​  ​  ​ ​ </li><li>(RC) Evacuar hacia los puntos de ​ ​ encuentro de la zona, evacuar en dirección contraria al viento. ​   </li></ol>","r":[{"assetId":"storage://images/img-cbcbdec8337ea93c204f87c070a015256be86eb5.gif","width":280,"height":215.28888888888886,"text":"","url":"","target":"","increaseByClick":false,"id":"image5","type":"image"}],"d":[{"id":"image5"},"RIESGOS: \n*Contacto Directo e Indirecto\n*Corriente Electrica   (Fibrilacion  quemaduras 1, 2 grado)  \n*Cortocircuito \n* Descargas Atmosfericas    \n*Tormentas electricas \n* Energía electroestática   \nCONTROLES:\n(PV)Señalización y/o aplicación de distancias   mínimas de seguridad y límites de aproximación seguros.       \n(PV) Monitoreo periódico de las   condiciones ambientales       \n(PV) Verificar  sistemas de puesta a tierra  y apantallamiento adecuados, garantizar la   equipotencialización de la infraestructura.       \n(PT) Aplicar SAES respectivo al   equipo a intervenir, utilizar equipos de protección personal dieléctrico.       \n(PT) Confirmar la pérdida de   disponibilidad del equipo      \n(RC) Aislar , Bloquear y   Tarjetear elementos intervenidos u afectados para evitar nuevas afectaciones   hasta la normalización de la instalación eléctrica.       \n(RC) Suspender el trabajo que sea   afectado por la lluvia, tormentas eléctricas o fuertes vientos.       \n(RC) Activar paradas de   emergencias de los equipos asociadas a la falla       \n(RC) Evacuar hacia los puntos de   encuentro de la zona, evacuar en dirección contraria al viento.    "]},"tp":"item"},{"i":"5ywckttbtefb","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:24px;font-family:fnt3_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\">​<span style=\"font-size:24px;font-family:fnt3_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\"> Riesgo Biológico</span></p>","a":"<p>​<b> Riesgo Biológico</b></p>","r":[],"d":[" Riesgo Biológico"]},"c":{"h":"<span data-count=\"0\" data-unselectable=\"\" data-block-separator=\"\" style=\"float:left;width:0px;height:0px\">​</span><div style=\"padding-top:10px;padding-bottom:10px;padding-left:30px;float:right\"><span id=\"image6\"></span></div><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt1_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt1_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">RIESGOS:</span></p><ul><li style=\"text-align:justify;line-height:1.275em;padding-top:0.4em;padding-bottom:0em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">*Mordeduras, </span></li><li style=\"text-align:justify;line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">*picaduras, </span></li><li style=\"text-align:justify;line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">*afectación de tejidos blandos y sistema ​ nervioso ​ ​ </span></li></ul><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt1_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt1_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">CONTROLES:</span></p><ol><li style=\"text-align:justify;line-height:1.275em;padding-top:0.4em;padding-bottom:0em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">(PV) Inspección del área de trabajo, suspensión ​ ​ de actividades por detección de animales. Transitar por terrenos previamente ​ ​ inspeccionados.  ​  ​  ​ ​ </span></li><li style=\"text-align:justify;line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">(PT)Contar con suero antiofídico ​ ​ en caso de mordedura de serpientes. ​  ​  ​ ​ </span></li><li style=\"text-align:justify;line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">(RC)En caso de detectar ​ ​ presencia de animales venenosos dar aviso ​ ​ ​ al personal de Ecopetrol S.A. ​ ​ ​ para gestionar su traslado con personal capacitado, según el tipo de ​ ​ especie a retirar. ​  ​  ​ ​ </span></li><li style=\"text-align:justify;line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">(RC) Aplicación de los controles ​ ​ reactivos de la guía de prevención y manejo de accidente ofidico de ECOPETROL ​ ​ S.A. ECP-DHS-G-20. En caso de Mordeduras de roedores y/o picadura de insectos ​ ​ informar oportunamente.  ​   </span></li></ol>","a":"<span id=\"image6\"></span><p><b>RIESGOS:</b></p><ul><li>*Mordeduras, </li><li>*picaduras, </li><li>*afectación de tejidos blandos y sistema ​ nervioso ​ ​ </li></ul><p><b>CONTROLES:</b></p><ol><li>(PV) Inspección del área de trabajo, suspensión ​ ​ de actividades por detección de animales. Transitar por terrenos previamente ​ ​ inspeccionados.  ​  ​  ​ ​ </li><li>(PT)Contar con suero antiofídico ​ ​ en caso de mordedura de serpientes. ​  ​  ​ ​ </li><li>(RC)En caso de detectar ​ ​ presencia de animales venenosos dar aviso ​ ​ ​ al personal de Ecopetrol S.A. ​ ​ ​ para gestionar su traslado con personal capacitado, según el tipo de ​ ​ especie a retirar. ​  ​  ​ ​ </li><li>(RC) Aplicación de los controles ​ ​ reactivos de la guía de prevención y manejo de accidente ofidico de ECOPETROL ​ ​ S.A. ECP-DHS-G-20. En caso de Mordeduras de roedores y/o picadura de insectos ​ ​ informar oportunamente.  ​   </li></ol>","r":[{"assetId":"storage://images/img-7326ba930c5ff44dad3768a5e8291217afa4942c.gif","width":209,"height":140.71287128712873,"text":"","url":"","target":"","increaseByClick":false,"id":"image6","type":"image"}],"d":[{"id":"image6"},"RIESGOS:\n*Mordeduras, \n*picaduras, \n*afectación de tejidos blandos y sistema  nervioso   \nCONTROLES:\n(PV) Inspección del área de trabajo, suspensión   de actividades por detección de animales. Transitar por terrenos previamente   inspeccionados.        \n(PT)Contar con suero antiofídico   en caso de mordedura de serpientes.       \n(RC)En caso de detectar   presencia de animales venenosos dar aviso    al personal de Ecopetrol S.A.    para gestionar su traslado con personal capacitado, según el tipo de   especie a retirar.       \n(RC) Aplicación de los controles   reactivos de la guía de prevención y manejo de accidente ofidico de ECOPETROL   S.A. ECP-DHS-G-20. En caso de Mordeduras de roedores y/o picadura de insectos   informar oportunamente.     "]},"tp":"item"}],"i":{"i":"4fgd07bfsn0m","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:24px;font-family:fnt3_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:24px;font-family:fnt3_64047, Arial, Serif, Sans-Serif;\">​</span></p>","a":"<p></p>","r":[],"d":[]},"c":{"h":"<p style=\"line-height:1.5em;padding-top:0em;padding-bottom:0em;font-size:24px;font-family:fnt3_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:24px;font-family:fnt3_64047, Arial, Serif, Sans-Serif;\">​</span></p><p style=\"line-height:1.5em;padding-top:0em;padding-bottom:0em;font-size:24px;font-family:fnt3_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:24px;font-family:fnt3_64047, Arial, Serif, Sans-Serif;\">​</span></p><p style=\"text-align:center;line-height:1.5em;padding-top:0em;padding-bottom:0em;font-size:24px;font-family:fnt3_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:24px;font-family:fnt3_64047, Arial, Serif, Sans-Serif;\">​</span></p><p style=\"text-align:center;line-height:1.5em;padding-top:0em;padding-bottom:0em;font-size:24px;font-family:fnt3_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:24px;font-family:fnt3_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">PELIGRO, RIESGOS Y CONTROLES</span></p>","a":"<p></p><p></p><p></p><p><b>PELIGRO, RIESGOS Y CONTROLES</b></p>","r":[],"d":["\n\n\nPELIGRO, RIESGOS Y CONTROLES"]},"a":{"i":"storage://sounds/snd-f65fefc2cbc1dfd7f85a9facef9dcc0458e6f3ca.mp3","p":false,"undefined":0,"T":""},"v":true},"s":{"i":"6fv8coqsi0l4","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:24px;font-family:fnt3_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:24px;font-family:fnt3_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Summary</span></p>","a":"<p><b>Summary</b></p>","r":[],"d":["Summary"]},"c":{"h":"<p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_64047, Arial, Serif, Sans-Serif;\">​</span></p>","a":"<p></p>","r":[],"d":[]},"v":false}},"s":{"t":"Peligros, Riesgos y Controles de la Planta Mariquita","te":true,"nbe":true,"ftw":true,"iw":960,"ih":540,"csc":1,"lar":true,"dat":3,"upb":false,"vl":4,"tw":0.3,"tht":2}},"s":{"f":{"t":{"tf":{"f":"fnt3_64047","s":24,"b":false,"i":false},"pf":{"t":"p","lh":1.15,"T":1,"b":0.5}},"nt":{"tf":{"f":"fnt2_64047","s":24,"b":false,"i":false},"pf":{"t":"p","lh":1.15,"T":1,"b":0.5}},"bt":{"tf":{"f":"fnt3_64047","s":24,"b":false,"i":false},"pf":{"t":"p","lh":1.15,"T":1,"b":0.5}}},"p":{"accessibilitySkinCreatedWith":"Created with iSpring evaluation version","backToAppButtonLabel":"Back","contentList":"Content List","emptySearchResult":"No matches found.","enableAccessibilityMode":"Enable screen reader mode","enableNormalMode":"Disable screen reader mode","nextButton":"NEXT","prevButton":"PREV","search":"Search"},"c":{"i":"kw02fr8mzlg3","n":"Custom preset","s":{"i":{"bg":4803142,"b":4013373,"titc":16777215,"titb":7171688,"ci":false,"tb":16777215,"ttc":4737096,"ttb":11316396,"tbtb":11057222,"tbttc":16777215,"htb":12702545,"htc":16777215},"t":{"ti":4737096,"h":4737096,"s":4737096,"t":4737096,"H":5409759},"d":{"bg":16777215,"b":14737632},"ap":{"pb":15987699,"c":4737096,"plb":7368816},"p":{"pb":6513500,"plb":4013373,"bb":11057222,"hbb":12176445,"btc":16777215,"hbtc":16777215}}},"m":{"i":"wb3heqxob0qn","n":"Visuals.Common.Editor.ColorScheme.Name.LightBlue","s":{"i":{"bg":16250871,"b":14737632,"titc":16777215,"titb":5723991,"ci":false,"tb":16777215,"ttc":4737096,"ttb":11316396,"tbtb":5409759,"tbttc":16777215,"htb":8237567,"htc":16777215},"t":{"ti":4737096,"h":4737096,"s":4737096,"t":4737096,"H":5409759},"d":{"bg":16777215,"b":14737632},"ap":{"pb":15987699,"c":4737096,"plb":7368816},"p":{"pb":13554131,"plb":16777215,"bb":5409759,"hbb":3898324,"btc":16777215,"hbtc":16777215}}}},"ps":"{\n    \"c\" : {\n        \"P\" : {\n            \"e\" : true,\n            \"l\" : true,\n            \"m\" : \"slideTimeline\",\n            \"v\" : true\n        },\n        \"l\" : true,\n        \"n\" : \"bySlides\",\n        \"o\" : false,\n        \"p\" : true,\n        \"r\" : true,\n        \"s\" : true,\n        \"v\" : true,\n        \"w\" : true,\n        \"x\" : false,\n        \"z\" : true\n    },\n    \"l\" : {\n        \"button.content.normal\" : \"#FFFFFF\",\n        \"button.content.over\" : \"#FFFFFF\",\n        \"button.face.normal\" : \"#A8B846\",\n        \"button.face.over\" : \"#B9CC3D\",\n        \"companyLogo.background\" : \"#F3F3F3\",\n        \"hyperlink\" : \"#528BDF\",\n        \"listItem.face.over\" : \"#E1E2E2\",\n        \"listItem.face.pressed\" : \"#9DA2A6\",\n        \"listItem.label.over\" : \"#47484A\",\n        \"listItem.label.pressed\" : \"#FFFFFF\",\n        \"listItem.label.visited\" : \"#727374\",\n        \"page.background\" : \"#63635C\",\n        \"panel.background\" : \"#FFFFFF\",\n        \"panel.text\" : \"#EBEBEB\",\n        \"player.background\" : \"#3D3D3D\",\n        \"popup.background\" : \"#F3F3F3\",\n        \"progress.background\" : \"#F7F7F7\",\n        \"progress.loading\" : \"#D9D9D9\",\n        \"progress.playback\" : \"#528BDF\",\n        \"slide.border\" : \"#3D3D3D\",\n        \"text\" : \"#47484A\"\n    },\n    \"o\" : {\n        \"h\" : true,\n        \"m\" : true,\n        \"n\" : true,\n        \"s\" : true,\n        \"t\" : true\n    },\n    \"s\" : {\n        \"L\" : false,\n        \"l\" : false,\n        \"n\" : true,\n        \"o\" : true,\n        \"p\" : false,\n        \"v\" : false\n    },\n    \"t\" : {\n        \"b\" : [ \"markerTools\", \"presenterInfo\", \"attachments\" ],\n        \"bl\" : false,\n        \"c\" : false,\n        \"l\" : false,\n        \"v\" : false\n    }\n}","sb":"C:/Users/ceir_/Desktop/Fase III/Presentación Fase III MAR (Published)/data/interaction_bg_2.png","fp":false,"rs":{"a":{"storage://sounds/snd-f65fefc2cbc1dfd7f85a9facef9dcc0458e6f3ca.mp3":[{"m":"audio/mpeg","s":"intr3\\audios\\snd-f65fefc2cbc1dfd7f85a9facef9dcc0458e6f3ca.mp3"}]},"v":{},"i":{"C:/Users/ceir_/Desktop/Fase III/Presentación Fase III MAR (Published)/data/interaction_bg_2.png":{"s":"intr3\\images\\interaction_bg_2.png","v":1280,"h":720},"storage://images/img-315ab13ff0fab6fa33d6f38c667b66085c02c3e2.gif":{"s":"intr3\\images\\img-315ab13ff0fab6fa33d6f38c667b66085c02c3e2.gif","v":391,"h":350},"storage://images/img-7326ba930c5ff44dad3768a5e8291217afa4942c.gif":{"s":"intr3\\images\\img-7326ba930c5ff44dad3768a5e8291217afa4942c.gif","v":101,"h":68},"storage://images/img-825e0fc760f003b342e200099d503dfce0a10a04.gif":{"s":"intr3\\images\\img-825e0fc760f003b342e200099d503dfce0a10a04.gif","v":300,"h":446},"storage://images/img-9c4a5eb145590627fe8a9c4fee3d34e5924720bf.gif":{"s":"intr3\\images\\img-9c4a5eb145590627fe8a9c4fee3d34e5924720bf.gif","v":717,"h":462},"storage://images/img-cbcbdec8337ea93c204f87c070a015256be86eb5.gif":{"s":"intr3\\images\\img-cbcbdec8337ea93c204f87c070a015256be86eb5.gif","v":225,"h":173},"storage://images/img-ea554cb8a08821fb2a29d76533d4d10137b849d9.gif":{"s":"intr3\\images\\img-ea554cb8a08821fb2a29d76533d4d10137b849d9.gif","v":347,"h":346}}},"fs":{"fnt0_64047":["intr3/fonts/fnt0.woff"],"fnt1_64047":["intr3/fonts/fnt1.woff"],"fnt2_64047":["intr3/fonts/fnt2.woff"],"fnt3_64047":["intr3/fonts/fnt3.woff"]},"S":{"fnt0_64047":{"f":"Open Sans","b":false,"i":false},"fnt1_64047":{"f":"Open Sans","b":true,"i":false},"fnt2_64047":{"f":"Segoe UI","b":false,"i":false},"fnt3_64047":{"f":"Segoe UI","b":true,"i":false}},"v":{}}";
	var skinSettings = {};
	loadHandler&&loadHandler(16, 'interactivity_2k6nb38xjnd', interactionJson, skinSettings);
	})();